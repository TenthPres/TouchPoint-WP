# Simple workflow for deploying static content to GitHub Pages
name: Deploy API Docs content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master", "docs"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v1
        
      - name: Cache phpDocumentor build files
        id: phpdocumentor-cache
        uses: actions/cache@v3
        with:
          path: .phpdoc/cache
          key: ${{ runner.os }}-phpdocumentor-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-phpdocumentor-
            
      - name: Build with phpDocumentor
        run: docker run --rm --volume "$(pwd):/data" phpdoc/phpdoc:3 -vv --target docs/phpApi --cache-folder .phpdoc/cache --template default
        
      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/phpApi

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

